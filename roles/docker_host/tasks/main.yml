- name: ansible_distribution_release
  debug: var=ansible_distribution_release

- name: prepare debian machine for install
  import_tasks: debian.yml
  when: ansible_facts['os_family']|lower == 'debian'

    #- name: Install docker stuff on debian machine 
    #  import_tasks: debian.yml
    #  when: ansible_facts['os_family']|lower == 'debian'

- name: Install Docker packages.
  package:
    name: "{{ docker_packages }}"
    state: "{{ docker_packages_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: "ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['Debian']"

- name: Install docker-compose plugin.
  package:
    name: "{{ docker_compose_package }}"
    state: "{{ docker_compose_package_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: "docker_install_compose_plugin | bool == true and (ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian'])"

- name: Ensure /etc/docker/ directory exists.
  file:
    path: /etc/docker
    state: directory
    mode: 0755
  when: docker_daemon_options.keys() | length > 0

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: docker_service_manage | bool

- include_tasks: docker-compose.yml
  when: docker_install_compose | bool

- include_tasks: docker-users.yml
  when: docker_users | length > 0

